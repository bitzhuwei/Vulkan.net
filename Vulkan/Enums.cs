/* Please note that this file is generated by the VulkanSharp's generator. Do not edit directly.

   Licensed under the MIT license.

   Copyright 2016 Xamarin Inc

   This notice may not be removed from any source distribution.
   See LICENSE file for licensing details.
*/

using System;

namespace Vulkan {
    public enum VkAttachmentLoadOp : int {
        Load = 0,
        Clear = 1,
        DontCare = 2,
    }

    public enum VkAttachmentStoreOp : int {
        Store = 0,
        DontCare = 1,
    }

    public enum VkBlendFactor : int {
        BlendFactorZero = 0,
        BlendFactorOne = 1,
        BlendFactorSrcColor = 2,
        BlendFactorOneMinusSrcColor = 3,
        BlendFactorDstColor = 4,
        BlendFactorOneMinusDstColor = 5,
        BlendFactorSrcAlpha = 6,
        BlendFactorOneMinusSrcAlpha = 7,
        BlendFactorDstAlpha = 8,
        BlendFactorOneMinusDstAlpha = 9,
        BlendFactorConstantColor = 10,
        BlendFactorOneMinusConstantColor = 11,
        BlendFactorConstantAlpha = 12,
        BlendFactorOneMinusConstantAlpha = 13,
        BlendFactorSrcAlphaSaturate = 14,
        BlendFactorSrc1Color = 15,
        BlendFactorOneMinusSrc1Color = 16,
        BlendFactorSrc1Alpha = 17,
        BlendFactorOneMinusSrc1Alpha = 18,
    }

    public enum VkBlendOp : int {
        BlendOpAdd = 0,
        BlendOpSubtract = 1,
        BlendOpReverseSubtract = 2,
        BlendOpMin = 3,
        BlendOpMax = 4,
        BlendOpZeroExt = 1000148000,
        BlendOpSrcExt = 1000148001,
        BlendOpDstExt = 1000148002,
        BlendOpSrcOverExt = 1000148003,
        BlendOpDstOverExt = 1000148004,
        BlendOpSrcInExt = 1000148005,
        BlendOpDstInExt = 1000148006,
        BlendOpSrcOutExt = 1000148007,
        BlendOpDstOutExt = 1000148008,
        BlendOpSrcAtopExt = 1000148009,
        BlendOpDstAtopExt = 1000148010,
        BlendOpXorExt = 1000148011,
        BlendOpMultiplyExt = 1000148012,
        BlendOpScreenExt = 1000148013,
        BlendOpOverlayExt = 1000148014,
        BlendOpDarkenExt = 1000148015,
        BlendOpLightenExt = 1000148016,
        BlendOpColordodgeExt = 1000148017,
        BlendOpColorburnExt = 1000148018,
        BlendOpHardlightExt = 1000148019,
        BlendOpSoftlightExt = 1000148020,
        BlendOpDifferenceExt = 1000148021,
        BlendOpExclusionExt = 1000148022,
        BlendOpInvertExt = 1000148023,
        BlendOpInvertRgbExt = 1000148024,
        BlendOpLineardodgeExt = 1000148025,
        BlendOpLinearburnExt = 1000148026,
        BlendOpVividlightExt = 1000148027,
        BlendOpLinearlightExt = 1000148028,
        BlendOpPinlightExt = 1000148029,
        BlendOpHardmixExt = 1000148030,
        BlendOpHslHueExt = 1000148031,
        BlendOpHslSaturationExt = 1000148032,
        BlendOpHslColorExt = 1000148033,
        BlendOpHslLuminosityExt = 1000148034,
        BlendOpPlusExt = 1000148035,
        BlendOpPlusClampedExt = 1000148036,
        BlendOpPlusClampedAlphaExt = 1000148037,
        BlendOpPlusDarkerExt = 1000148038,
        BlendOpMinusExt = 1000148039,
        BlendOpMinusClampedExt = 1000148040,
        BlendOpContrastExt = 1000148041,
        BlendOpInvertOvgExt = 1000148042,
        BlendOpRedExt = 1000148043,
        BlendOpGreenExt = 1000148044,
        BlendOpBlueExt = 1000148045,
    }

    public enum VkBorderColor : int {
        BorderColorFloatTransparentBlack = 0,
        BorderColorIntTransparentBlack = 1,
        BorderColorFloatOpaqueBlack = 2,
        BorderColorIntOpaqueBlack = 3,
        BorderColorFloatOpaqueWhite = 4,
        BorderColorIntOpaqueWhite = 5,
    }

    public enum VkPipelineCacheHeaderVersion : int {
        PipelineCacheHeaderVersionOne = 1,
    }

    [Flags]
    public enum VkDescriptorSetLayoutCreateFlags : int {
        DescriptorSetLayoutCreatePushDescriptorKhr = 0x1,
    }

    [Flags]
    public enum VkBufferCreateFlags : int {
        BufferCreateSparseBinding = 0x1,
        BufferCreateSparseResidency = 0x2,
        BufferCreateSparseAliased = 0x4,
    }

    [Flags]
    public enum VkBufferUsageFlags : int {
        TransferSrc = 0x1,
        TransferDst = 0x2,
        UniformTexelBuffer = 0x4,
        StorageTexelBuffer = 0x8,
        UniformBuffer = 0x10,
        StorageBuffer = 0x20,
        IndexBuffer = 0x40,
        VertexBuffer = 0x80,
        IndirectBuffer = 0x100,
    }

    [Flags]
    public enum VkColorComponentFlags : int {
        R = 0x1,
        G = 0x2,
        B = 0x4,
        A = 0x8,
    }

    public enum VkComponentSwizzle : int {
        Identity = 0,
        Zero = 1,
        One = 2,
        R = 3,
        G = 4,
        B = 5,
        A = 6,
    }

    [Flags]
    public enum VkCommandPoolCreateFlags : int {
        Transient = 0x1,
        ResetCommandBuffer = 0x2,
    }

    [Flags]
    public enum VkCommandPoolResetFlags : int {
        CommandPoolResetReleaseResources = 0x1,
    }

    [Flags]
    public enum VkCommandBufferResetFlags : int {
        CommandBufferResetReleaseResources = 0x1,
    }

    public enum VkCommandBufferLevel : int {
        Primary = 0,
        Secondary = 1,
    }

    [Flags]
    public enum VkCommandBufferUsageFlags : int {
        CommandBufferUsageOneTimeSubmit = 0x1,
        CommandBufferUsageRenderPassContinue = 0x2,
        CommandBufferUsageSimultaneousUse = 0x4,
    }

    public enum VkCompareOp : int {
        CompareOpNever = 0,
        CompareOpLess = 1,
        CompareOpEqual = 2,
        CompareOpLessOrEqual = 3,
        CompareOpGreater = 4,
        CompareOpNotEqual = 5,
        CompareOpGreaterOrEqual = 6,
        CompareOpAlways = 7,
    }

    [Flags]
    public enum VkCullModeFlags : int {
        None = 0,
        Front = 0x1,
        Back = 0x2,
        FrontAndBack = 0x00000003,
    }

    public enum VkDescriptorType : int {
        Sampler = 0,
        CombinedImageSampler = 1,
        SampledImage = 2,
        StorageImage = 3,
        UniformTexelBuffer = 4,
        StorageTexelBuffer = 5,
        UniformBuffer = 6,
        StorageBuffer = 7,
        UniformBufferDynamic = 8,
        StorageBufferDynamic = 9,
        InputAttachment = 10,
    }

    public enum VkDynamicState : int {
        DynamicStateViewport = 0,
        DynamicStateScissor = 1,
        DynamicStateLineWidth = 2,
        DynamicStateDepthBias = 3,
        DynamicStateBlendConstants = 4,
        DynamicStateDepthBounds = 5,
        DynamicStateStencilCompareMask = 6,
        DynamicStateStencilWriteMask = 7,
        DynamicStateStencilReference = 8,
        DynamicStateViewportWScalingNv = 1000087000,
        DynamicStateDiscardRectangleExt = 1000099000,
        DynamicStateSampleLocationsExt = 1000143000,
    }

    [Flags]
    public enum VkFenceCreateFlags : int {
        FenceCreateSignaled = 0x1,
    }

    public enum VkPolygonMode : int {
        Fill = 0,
        Line = 1,
        Point = 2,
        FillRectangleNv = 1000153000,
    }

    public enum VkFormat : int {
        Undefined = 0,
        R4G4UnormPack8 = 1,
        R4G4B4A4UnormPack16 = 2,
        B4G4R4A4UnormPack16 = 3,
        R5G6B5UnormPack16 = 4,
        B5G6R5UnormPack16 = 5,
        R5G5B5A1UnormPack16 = 6,
        B5G5R5A1UnormPack16 = 7,
        A1R5G5B5UnormPack16 = 8,
        R8Unorm = 9,
        R8Snorm = 10,
        R8Uscaled = 11,
        R8Sscaled = 12,
        R8Uint = 13,
        R8Sint = 14,
        R8Srgb = 15,
        R8G8Unorm = 16,
        R8G8Snorm = 17,
        R8G8Uscaled = 18,
        R8G8Sscaled = 19,
        R8G8Uint = 20,
        R8G8Sint = 21,
        R8G8Srgb = 22,
        R8G8B8Unorm = 23,
        R8G8B8Snorm = 24,
        R8G8B8Uscaled = 25,
        R8G8B8Sscaled = 26,
        R8G8B8Uint = 27,
        R8G8B8Sint = 28,
        R8G8B8Srgb = 29,
        B8G8R8Unorm = 30,
        B8G8R8Snorm = 31,
        B8G8R8Uscaled = 32,
        B8G8R8Sscaled = 33,
        B8G8R8Uint = 34,
        B8G8R8Sint = 35,
        B8G8R8Srgb = 36,
        R8G8B8A8Unorm = 37,
        R8G8B8A8Snorm = 38,
        R8G8B8A8Uscaled = 39,
        R8G8B8A8Sscaled = 40,
        R8G8B8A8Uint = 41,
        R8G8B8A8Sint = 42,
        R8G8B8A8Srgb = 43,
        B8G8R8A8Unorm = 44,
        B8G8R8A8Snorm = 45,
        B8G8R8A8Uscaled = 46,
        B8G8R8A8Sscaled = 47,
        B8G8R8A8Uint = 48,
        B8G8R8A8Sint = 49,
        B8G8R8A8Srgb = 50,
        A8B8G8R8UnormPack32 = 51,
        A8B8G8R8SnormPack32 = 52,
        A8B8G8R8UscaledPack32 = 53,
        A8B8G8R8SscaledPack32 = 54,
        A8B8G8R8UintPack32 = 55,
        A8B8G8R8SintPack32 = 56,
        A8B8G8R8SrgbPack32 = 57,
        A2R10G10B10UnormPack32 = 58,
        A2R10G10B10SnormPack32 = 59,
        A2R10G10B10UscaledPack32 = 60,
        A2R10G10B10SscaledPack32 = 61,
        A2R10G10B10UintPack32 = 62,
        A2R10G10B10SintPack32 = 63,
        A2B10G10R10UnormPack32 = 64,
        A2B10G10R10SnormPack32 = 65,
        A2B10G10R10UscaledPack32 = 66,
        A2B10G10R10SscaledPack32 = 67,
        A2B10G10R10UintPack32 = 68,
        A2B10G10R10SintPack32 = 69,
        R16Unorm = 70,
        R16Snorm = 71,
        R16Uscaled = 72,
        R16Sscaled = 73,
        R16Uint = 74,
        R16Sint = 75,
        R16Sfloat = 76,
        R16G16Unorm = 77,
        R16G16Snorm = 78,
        R16G16Uscaled = 79,
        R16G16Sscaled = 80,
        R16G16Uint = 81,
        R16G16Sint = 82,
        R16G16Sfloat = 83,
        R16G16B16Unorm = 84,
        R16G16B16Snorm = 85,
        R16G16B16Uscaled = 86,
        R16G16B16Sscaled = 87,
        R16G16B16Uint = 88,
        R16G16B16Sint = 89,
        R16G16B16Sfloat = 90,
        R16G16B16A16Unorm = 91,
        R16G16B16A16Snorm = 92,
        R16G16B16A16Uscaled = 93,
        R16G16B16A16Sscaled = 94,
        R16G16B16A16Uint = 95,
        R16G16B16A16Sint = 96,
        R16G16B16A16Sfloat = 97,
        R32Uint = 98,
        R32Sint = 99,
        R32Sfloat = 100,
        R32G32Uint = 101,
        R32G32Sint = 102,
        R32G32Sfloat = 103,
        R32G32B32Uint = 104,
        R32G32B32Sint = 105,
        R32G32B32Sfloat = 106,
        R32G32B32A32Uint = 107,
        R32G32B32A32Sint = 108,
        R32G32B32A32Sfloat = 109,
        R64Uint = 110,
        R64Sint = 111,
        R64Sfloat = 112,
        R64G64Uint = 113,
        R64G64Sint = 114,
        R64G64Sfloat = 115,
        R64G64B64Uint = 116,
        R64G64B64Sint = 117,
        R64G64B64Sfloat = 118,
        R64G64B64A64Uint = 119,
        R64G64B64A64Sint = 120,
        R64G64B64A64Sfloat = 121,
        B10G11R11UfloatPack32 = 122,
        E5B9G9R9UfloatPack32 = 123,
        D16Unorm = 124,
        X8D24UnormPack32 = 125,
        D32Sfloat = 126,
        S8Uint = 127,
        D16UnormS8Uint = 128,
        D24UnormS8Uint = 129,
        D32SfloatS8Uint = 130,
        Bc1RgbUnormBlock = 131,
        Bc1RgbSrgbBlock = 132,
        Bc1RgbaUnormBlock = 133,
        Bc1RgbaSrgbBlock = 134,
        Bc2UnormBlock = 135,
        Bc2SrgbBlock = 136,
        Bc3UnormBlock = 137,
        Bc3SrgbBlock = 138,
        Bc4UnormBlock = 139,
        Bc4SnormBlock = 140,
        Bc5UnormBlock = 141,
        Bc5SnormBlock = 142,
        Bc6HUfloatBlock = 143,
        Bc6HSfloatBlock = 144,
        Bc7UnormBlock = 145,
        Bc7SrgbBlock = 146,
        Etc2R8G8B8UnormBlock = 147,
        Etc2R8G8B8SrgbBlock = 148,
        Etc2R8G8B8A1UnormBlock = 149,
        Etc2R8G8B8A1SrgbBlock = 150,
        Etc2R8G8B8A8UnormBlock = 151,
        Etc2R8G8B8A8SrgbBlock = 152,
        EacR11UnormBlock = 153,
        EacR11SnormBlock = 154,
        EacR11G11UnormBlock = 155,
        EacR11G11SnormBlock = 156,
        Astc4X4UnormBlock = 157,
        Astc4X4SrgbBlock = 158,
        Astc5X4UnormBlock = 159,
        Astc5X4SrgbBlock = 160,
        Astc5X5UnormBlock = 161,
        Astc5X5SrgbBlock = 162,
        Astc6X5UnormBlock = 163,
        Astc6X5SrgbBlock = 164,
        Astc6X6UnormBlock = 165,
        Astc6X6SrgbBlock = 166,
        Astc8X5UnormBlock = 167,
        Astc8X5SrgbBlock = 168,
        Astc8X6UnormBlock = 169,
        Astc8X6SrgbBlock = 170,
        Astc8X8UnormBlock = 171,
        Astc8X8SrgbBlock = 172,
        Astc10X5UnormBlock = 173,
        Astc10X5SrgbBlock = 174,
        Astc10X6UnormBlock = 175,
        Astc10X6SrgbBlock = 176,
        Astc10X8UnormBlock = 177,
        Astc10X8SrgbBlock = 178,
        Astc10X10UnormBlock = 179,
        Astc10X10SrgbBlock = 180,
        Astc12X10UnormBlock = 181,
        Astc12X10SrgbBlock = 182,
        Astc12X12UnormBlock = 183,
        Astc12X12SrgbBlock = 184,
        Pvrtc12BppUnormBlockImg = 1000054000,
        Pvrtc14BppUnormBlockImg = 1000054001,
        Pvrtc22BppUnormBlockImg = 1000054002,
        Pvrtc24BppUnormBlockImg = 1000054003,
        Pvrtc12BppSrgbBlockImg = 1000054004,
        Pvrtc14BppSrgbBlockImg = 1000054005,
        Pvrtc22BppSrgbBlockImg = 1000054006,
        Pvrtc24BppSrgbBlockImg = 1000054007,
        G8B8G8R8422UnormKhr = 1000156000,
        B8G8R8G8422UnormKhr = 1000156001,
        G8B8R83Plane420UnormKhr = 1000156002,
        G8B8R82Plane420UnormKhr = 1000156003,
        G8B8R83Plane422UnormKhr = 1000156004,
        G8B8R82Plane422UnormKhr = 1000156005,
        G8B8R83Plane444UnormKhr = 1000156006,
        R10X6UnormPack16Khr = 1000156007,
        R10X6G10X6Unorm2Pack16Khr = 1000156008,
        R10X6G10X6B10X6A10X6Unorm4Pack16Khr = 1000156009,
        G10X6B10X6G10X6R10X6422Unorm4Pack16Khr = 1000156010,
        B10X6G10X6R10X6G10X6422Unorm4Pack16Khr = 1000156011,
        G10X6B10X6R10X63Plane420Unorm3Pack16Khr = 1000156012,
        G10X6B10X6R10X62Plane420Unorm3Pack16Khr = 1000156013,
        G10X6B10X6R10X63Plane422Unorm3Pack16Khr = 1000156014,
        G10X6B10X6R10X62Plane422Unorm3Pack16Khr = 1000156015,
        G10X6B10X6R10X63Plane444Unorm3Pack16Khr = 1000156016,
        R12X4UnormPack16Khr = 1000156017,
        R12X4G12X4Unorm2Pack16Khr = 1000156018,
        R12X4G12X4B12X4A12X4Unorm4Pack16Khr = 1000156019,
        G12X4B12X4G12X4R12X4422Unorm4Pack16Khr = 1000156020,
        B12X4G12X4R12X4G12X4422Unorm4Pack16Khr = 1000156021,
        G12X4B12X4R12X43Plane420Unorm3Pack16Khr = 1000156022,
        G12X4B12X4R12X42Plane420Unorm3Pack16Khr = 1000156023,
        G12X4B12X4R12X43Plane422Unorm3Pack16Khr = 1000156024,
        G12X4B12X4R12X42Plane422Unorm3Pack16Khr = 1000156025,
        G12X4B12X4R12X43Plane444Unorm3Pack16Khr = 1000156026,
        G16B16G16R16422UnormKhr = 1000156027,
        B16G16R16G16422UnormKhr = 1000156028,
        G16B16R163Plane420UnormKhr = 1000156029,
        G16B16R162Plane420UnormKhr = 1000156030,
        G16B16R163Plane422UnormKhr = 1000156031,
        G16B16R162Plane422UnormKhr = 1000156032,
        G16B16R163Plane444UnormKhr = 1000156033,
    }

    [Flags]
    public enum VkFormatFeatureFlags : int {
        FormatFeatureSampledImage = 0x1,
        FormatFeatureStorageImage = 0x2,
        FormatFeatureStorageImageAtomic = 0x4,
        FormatFeatureUniformTexelBuffer = 0x8,
        FormatFeatureStorageTexelBuffer = 0x10,
        FormatFeatureStorageTexelBufferAtomic = 0x20,
        FormatFeatureVertexBuffer = 0x40,
        FormatFeatureColorAttachment = 0x80,
        FormatFeatureColorAttachmentBlend = 0x100,
        FormatFeatureDepthStencilAttachment = 0x200,
        FormatFeatureBlitSrc = 0x400,
        FormatFeatureBlitDst = 0x800,
        FormatFeatureSampledImageFilterLinear = 0x1000,
        FormatFeatureSampledImageFilterCubicImg = 0x2000,
        FormatFeatureTransferSrcKhr = 0x4000,
        FormatFeatureTransferDstKhr = 0x8000,
        FormatFeatureSampledImageFilterMinmaxExt = 0x10000,
        FormatFeatureMidpointChromaSamplesKhr = 0x20000,
        FormatFeatureSampledImageYcbcrConversionLinearFilterKhr = 0x40000,
        FormatFeatureSampledImageYcbcrConversionSeparateReconstructionFilterKhr = 0x80000,
        FormatFeatureSampledImageYcbcrConversionChromaReconstructionExplicitKhr = 0x100000,
        FormatFeatureSampledImageYcbcrConversionChromaReconstructionExplicitForceableKhr = 0x200000,
        FormatFeatureDisjointKhr = 0x400000,
        FormatFeatureCositedChromaSamplesKhr = 0x800000,
    }

    public enum VkFrontFace : int {
        CounterClockwise = 0,
        Clockwise = 1,
    }

    [Flags]
    public enum VkImageAspectFlags : int {
        Color = 0x1,
        Depth = 0x2,
        Stencil = 0x4,
        Metadata = 0x8,
        Plane0Khr = 0x10,
        Plane1Khr = 0x20,
        Plane2Khr = 0x40,
    }

    [Flags]
    public enum VkImageCreateFlags : int {
        ImageCreateSparseBinding = 0x1,
        ImageCreateSparseResidency = 0x2,
        ImageCreateSparseAliased = 0x4,
        ImageCreateMutableFormat = 0x8,
        ImageCreateCubeCompatible = 0x10,
        ImageCreateBindSfrKhx = 0x40,
        ImageCreate2DArrayCompatibleKhr = 0x20,
        ImageCreateBlockTexelViewCompatibleKhr = 0x80,
        ImageCreateExtendedUsageKhr = 0x100,
        ImageCreateSampleLocationsCompatibleDepthExt = 0x1000,
        ImageCreateDisjointKhr = 0x200,
        ImageCreateAliasKhr = 0x400,
    }

    public enum VkImageLayout : int {
        Undefined = 0,
        General = 1,
        ColorAttachmentOptimal = 2,
        DepthStencilAttachmentOptimal = 3,
        DepthStencilReadOnlyOptimal = 4,
        ShaderReadOnlyOptimal = 5,
        TransferSrcOptimal = 6,
        TransferDstOptimal = 7,
        Preinitialized = 8,
        PresentSrcKhr = 1000001002,
        SharedPresentKhr = 1000111000,
        DepthReadOnlyStencilAttachmentOptimalKhr = 1000117000,
        DepthAttachmentStencilReadOnlyOptimalKhr = 1000117001,
    }

    public enum VkImageTiling : int {
        ImageTilingOptimal = 0,
        ImageTilingLinear = 1,
    }

    public enum VkImageType : int {
        ImageType1D = 0,
        ImageType2D = 1,
        ImageType3D = 2,
    }

    [Flags]
    public enum VkImageUsageFlags : int {
        TransferSrc = 0x1,
        TransferDst = 0x2,
        Sampled = 0x4,
        Storage = 0x8,
        ColorAttachment = 0x10,
        DepthStencilAttachment = 0x20,
        TransientAttachment = 0x40,
        InputAttachment = 0x80,
    }

    public enum VkImageViewType : int {
        View1D = 0,
        View2D = 1,
        View3D = 2,
        ViewCube = 3,
        View1DArray = 4,
        View2DArray = 5,
        ViewCubeArray = 6,
    }

    public enum VkSharingMode : int {
        Exclusive = 0,
        Concurrent = 1,
    }

    public enum VkIndexType : int {
        Uint16 = 0,
        Uint32 = 1,
    }

    public enum VkLogicOp : int {
        Clear = 0,
        And = 1,
        AndReverse = 2,
        Copy = 3,
        AndInverted = 4,
        NoOp = 5,
        Xor = 6,
        Or = 7,
        Nor = 8,
        Equivalent = 9,
        Invert = 10,
        OrReverse = 11,
        CopyInverted = 12,
        OrInverted = 13,
        Nand = 14,
        Set = 15,
    }

    [Flags]
    public enum VkMemoryHeapFlags : int {
        MemoryHeapDeviceLocal = 0x1,
        MemoryHeapMultiInstanceKhx = 0x2,
    }

    [Flags]
    public enum VkAccessFlags : int {
        AccessIndirectCommandRead = 0x1,
        AccessIndexRead = 0x2,
        AccessVertexAttributeRead = 0x4,
        AccessUniformRead = 0x8,
        AccessInputAttachmentRead = 0x10,
        AccessShaderRead = 0x20,
        AccessShaderWrite = 0x40,
        AccessColorAttachmentRead = 0x80,
        AccessColorAttachmentWrite = 0x100,
        AccessDepthStencilAttachmentRead = 0x200,
        AccessDepthStencilAttachmentWrite = 0x400,
        AccessTransferRead = 0x800,
        AccessTransferWrite = 0x1000,
        AccessHostRead = 0x2000,
        AccessHostWrite = 0x4000,
        AccessMemoryRead = 0x8000,
        AccessMemoryWrite = 0x10000,
        AccessCommandProcessReadNvx = 0x20000,
        AccessCommandProcessWriteNvx = 0x40000,
        AccessColorAttachmentReadNoncoherentExt = 0x80000,
    }

    [Flags]
    public enum VkMemoryPropertyFlags : int {
        DeviceLocal = 0x1,
        HostVisible = 0x2,
        HostCoherent = 0x4,
        HostCached = 0x8,
        LazilyAllocated = 0x10,
    }

    public enum VkPhysicalDeviceType : int {
        PhysicalDeviceTypeOther = 0,
        PhysicalDeviceTypeIntegratedGpu = 1,
        PhysicalDeviceTypeDiscreteGpu = 2,
        PhysicalDeviceTypeVirtualGpu = 3,
        PhysicalDeviceTypeCpu = 4,
    }

    public enum VkPipelineBindPoint : int {
        Graphics = 0,
        Compute = 1,
    }

    [Flags]
    public enum VkPipelineCreateFlags : int {
        PipelineCreateDisableOptimization = 0x1,
        PipelineCreateAllowDerivatives = 0x2,
        PipelineCreateDerivative = 0x4,
        PipelineCreateViewIndexFromDeviceIndexKhx = 0x8,
        PipelineCreateDispatchBaseKhx = 0x10,
    }

    public enum VkPrimitiveTopology : int {
        PointList = 0,
        LineList = 1,
        LineStrip = 2,
        TriangleList = 3,
        TriangleStrip = 4,
        TriangleFan = 5,
        LineListWithAdjacency = 6,
        LineStripWithAdjacency = 7,
        TriangleListWithAdjacency = 8,
        TriangleStripWithAdjacency = 9,
        PatchList = 10,
    }

    [Flags]
    public enum VkQueryControlFlags : int {
        QueryControlPrecise = 0x1,
    }

    [Flags]
    public enum VkQueryPipelineStatisticFlags : int {
        QueryPipelineStatisticInputAssemblyVertices = 0x1,
        QueryPipelineStatisticInputAssemblyPrimitives = 0x2,
        QueryPipelineStatisticVertexShaderInvocations = 0x4,
        QueryPipelineStatisticGeometryShaderInvocations = 0x8,
        QueryPipelineStatisticGeometryShaderPrimitives = 0x10,
        QueryPipelineStatisticClippingInvocations = 0x20,
        QueryPipelineStatisticClippingPrimitives = 0x40,
        QueryPipelineStatisticFragmentShaderInvocations = 0x80,
        QueryPipelineStatisticTessellationControlShaderPatches = 0x100,
        QueryPipelineStatisticTessellationEvaluationShaderInvocations = 0x200,
        QueryPipelineStatisticComputeShaderInvocations = 0x400,
    }

    [Flags]
    public enum VkQueryResultFlags : int {
        QueryResult64 = 0x1,
        QueryResultWait = 0x2,
        QueryResultWithAvailability = 0x4,
        QueryResultPartial = 0x8,
    }

    public enum VkQueryType : int {
        QueryTypeOcclusion = 0,
        QueryTypePipelineStatistics = 1,
        QueryTypeTimestamp = 2,
    }

    [Flags]
    public enum VkQueueFlags : int {
        QueueGraphics = 0x1,
        QueueCompute = 0x2,
        QueueTransfer = 0x4,
        QueueSparseBinding = 0x8,
    }

    public enum VkSubpassContents : int {
        Inline = 0,
        SecondaryCommandBuffers = 1,
    }

    public enum VkResult : int {
        Success = 0,
        NotReady = 1,
        Timeout = 2,
        EventSet = 3,
        EventReset = 4,
        Incomplete = 5,
        ErrorOutOfHostMemory = -1,
        ErrorOutOfDeviceMemory = -2,
        ErrorInitializationFailed = -3,
        ErrorDeviceLost = -4,
        ErrorMemoryMapFailed = -5,
        ErrorLayerNotPresent = -6,
        ErrorExtensionNotPresent = -7,
        ErrorFeatureNotPresent = -8,
        ErrorIncompatibleDriver = -9,
        ErrorTooManyObjects = -10,
        ErrorFormatNotSupported = -11,
        ErrorFragmentedPool = -12,
        ErrorSurfaceLostKhr = -1000000000,
        ErrorNativeWindowInUseKhr = -1000000001,
        SuboptimalKhr = 1000001003,
        ErrorOutOfDateKhr = -1000001004,
        ErrorIncompatibleDisplayKhr = -1000003001,
        ErrorValidationFailedExt = -1000011001,
        ErrorInvalidShaderNv = -1000012000,
        ErrorOutOfPoolMemoryKhr = -1000069000,
        ErrorInvalidExternalHandleKhr = -1000072003,
        ErrorNotPermittedExt = -1000174001,
    }

    [Flags]
    public enum VkShaderStageFlags : int {
        Vertex = 0x1,
        TessellationControl = 0x2,
        TessellationEvaluation = 0x4,
        Geometry = 0x8,
        Fragment = 0x10,
        Compute = 0x20,
        AllGraphics = 0x0000001F,
        All = 0x7FFFFFFF,
    }

    [Flags]
    public enum VkSparseMemoryBindFlags : int {
        SparseMemoryBindMetadata = 0x1,
    }

    [Flags]
    public enum VkStencilFaceFlags : int {
        StencilFaceFront = 0x1,
        StencilFaceBack = 0x2,
        StencilFrontAndBack = 0x00000003,
    }

    public enum VkStencilOp : int {
        StencilOpKeep = 0,
        StencilOpZero = 1,
        StencilOpReplace = 2,
        StencilOpIncrementAndClamp = 3,
        StencilOpDecrementAndClamp = 4,
        StencilOpInvert = 5,
        StencilOpIncrementAndWrap = 6,
        StencilOpDecrementAndWrap = 7,
    }

    public enum VkStructureType : int {
        ApplicationInfo = 0,
        InstanceCreateInfo = 1,
        DeviceQueueCreateInfo = 2,
        DeviceCreateInfo = 3,
        SubmitInfo = 4,
        MemoryAllocateInfo = 5,
        MappedMemoryRange = 6,
        BindSparseInfo = 7,
        FenceCreateInfo = 8,
        SemaphoreCreateInfo = 9,
        EventCreateInfo = 10,
        QueryPoolCreateInfo = 11,
        BufferCreateInfo = 12,
        BufferViewCreateInfo = 13,
        ImageCreateInfo = 14,
        ImageViewCreateInfo = 15,
        ShaderModuleCreateInfo = 16,
        PipelineCacheCreateInfo = 17,
        PipelineShaderStageCreateInfo = 18,
        PipelineVertexInputStateCreateInfo = 19,
        PipelineInputAssemblyStateCreateInfo = 20,
        PipelineTessellationStateCreateInfo = 21,
        PipelineViewportStateCreateInfo = 22,
        PipelineRasterizationStateCreateInfo = 23,
        PipelineMultisampleStateCreateInfo = 24,
        PipelineDepthStencilStateCreateInfo = 25,
        PipelineColorBlendStateCreateInfo = 26,
        PipelineDynamicStateCreateInfo = 27,
        GraphicsPipelineCreateInfo = 28,
        ComputePipelineCreateInfo = 29,
        PipelineLayoutCreateInfo = 30,
        SamplerCreateInfo = 31,
        DescriptorSetLayoutCreateInfo = 32,
        DescriptorPoolCreateInfo = 33,
        DescriptorSetAllocateInfo = 34,
        WriteDescriptorSet = 35,
        CopyDescriptorSet = 36,
        FramebufferCreateInfo = 37,
        RenderPassCreateInfo = 38,
        CommandPoolCreateInfo = 39,
        CommandBufferAllocateInfo = 40,
        CommandBufferInheritanceInfo = 41,
        CommandBufferBeginInfo = 42,
        RenderPassBeginInfo = 43,
        BufferMemoryBarrier = 44,
        ImageMemoryBarrier = 45,
        MemoryBarrier = 46,
        LoaderInstanceCreateInfo = 47,
        LoaderDeviceCreateInfo = 48,
        SwapchainCreateInfoKhr = 1000001000,
        PresentInfoKhr = 1000001001,
        DisplayModeCreateInfoKhr = 1000002000,
        DisplaySurfaceCreateInfoKhr = 1000002001,
        DisplayPresentInfoKhr = 1000003000,
        XlibSurfaceCreateInfoKhr = 1000004000,
        XcbSurfaceCreateInfoKhr = 1000005000,
        WaylandSurfaceCreateInfoKhr = 1000006000,
        MirSurfaceCreateInfoKhr = 1000007000,
        AndroidSurfaceCreateInfoKhr = 1000008000,
        Win32SurfaceCreateInfoKhr = 1000009000,
        DebugReportCallbackCreateInfoExt = 1000011000,
        PipelineRasterizationStateRasterizationOrderAmd = 1000018000,
        DebugMarkerObjectNameInfoExt = 1000022000,
        DebugMarkerObjectTagInfoExt = 1000022001,
        DebugMarkerMarkerInfoExt = 1000022002,
        DedicatedAllocationImageCreateInfoNv = 1000026000,
        DedicatedAllocationBufferCreateInfoNv = 1000026001,
        DedicatedAllocationMemoryAllocateInfoNv = 1000026002,
        TextureLODGatherFormatPropertiesAmd = 1000041000,
        RenderPassMultiviewCreateInfoKhx = 1000053000,
        PhysicalDeviceMultiviewFeaturesKhx = 1000053001,
        PhysicalDeviceMultiviewPropertiesKhx = 1000053002,
        ExternalMemoryImageCreateInfoNv = 1000056000,
        ExportMemoryAllocateInfoNv = 1000056001,
        ImportMemoryWin32HandleInfoNv = 1000057000,
        ExportMemoryWin32HandleInfoNv = 1000057001,
        Win32KeyedMutexAcquireReleaseInfoNv = 1000058000,
        PhysicalDeviceFeatures2Khr = 1000059000,
        PhysicalDeviceProperties2Khr = 1000059001,
        FormatProperties2Khr = 1000059002,
        ImageFormatProperties2Khr = 1000059003,
        PhysicalDeviceImageFormatInfo2Khr = 1000059004,
        QueueFamilyProperties2Khr = 1000059005,
        PhysicalDeviceMemoryProperties2Khr = 1000059006,
        SparseImageFormatProperties2Khr = 1000059007,
        PhysicalDeviceSparseImageFormatInfo2Khr = 1000059008,
        MemoryAllocateFlagsInfoKhx = 1000060000,
        DeviceGroupRenderPassBeginInfoKhx = 1000060003,
        DeviceGroupCommandBufferBeginInfoKhx = 1000060004,
        DeviceGroupSubmitInfoKhx = 1000060005,
        DeviceGroupBindSparseInfoKhx = 1000060006,
        AcquireNextImageInfoKhx = 1000060010,
        BindBufferMemoryDeviceGroupInfoKhx = 1000060013,
        BindImageMemoryDeviceGroupInfoKhx = 1000060014,
        DeviceGroupPresentCapabilitiesKhx = 1000060007,
        ImageSwapchainCreateInfoKhx = 1000060008,
        BindImageMemorySwapchainInfoKhx = 1000060009,
        DeviceGroupPresentInfoKhx = 1000060011,
        DeviceGroupSwapchainCreateInfoKhx = 1000060012,
        ValidationFlagsExt = 1000061000,
        ViSurfaceCreateInfoNn = 1000062000,
        PhysicalDeviceGroupPropertiesKhx = 1000070000,
        DeviceGroupDeviceCreateInfoKhx = 1000070001,
        PhysicalDeviceExternalImageFormatInfoKhr = 1000071000,
        ExternalImageFormatPropertiesKhr = 1000071001,
        PhysicalDeviceExternalBufferInfoKhr = 1000071002,
        ExternalBufferPropertiesKhr = 1000071003,
        PhysicalDeviceIDPropertiesKhr = 1000071004,
        ExternalMemoryBufferCreateInfoKhr = 1000072000,
        ExternalMemoryImageCreateInfoKhr = 1000072001,
        ExportMemoryAllocateInfoKhr = 1000072002,
        ImportMemoryWin32HandleInfoKhr = 1000073000,
        ExportMemoryWin32HandleInfoKhr = 1000073001,
        MemoryWin32HandlePropertiesKhr = 1000073002,
        MemoryGetWin32HandleInfoKhr = 1000073003,
        ImportMemoryFdInfoKhr = 1000074000,
        MemoryFdPropertiesKhr = 1000074001,
        MemoryGetFdInfoKhr = 1000074002,
        Win32KeyedMutexAcquireReleaseInfoKhr = 1000075000,
        PhysicalDeviceExternalSemaphoreInfoKhr = 1000076000,
        ExternalSemaphorePropertiesKhr = 1000076001,
        ExportSemaphoreCreateInfoKhr = 1000077000,
        ImportSemaphoreWin32HandleInfoKhr = 1000078000,
        ExportSemaphoreWin32HandleInfoKhr = 1000078001,
        D3D12FenceSubmitInfoKhr = 1000078002,
        SemaphoreGetWin32HandleInfoKhr = 1000078003,
        ImportSemaphoreFdInfoKhr = 1000079000,
        SemaphoreGetFdInfoKhr = 1000079001,
        PhysicalDevicePushDescriptorPropertiesKhr = 1000080000,
        PhysicalDevice16BitStorageFeaturesKhr = 1000083000,
        PresentRegionsKhr = 1000084000,
        DescriptorUpdateTemplateCreateInfoKhr = 1000085000,
        ObjectTableCreateInfoNvx = 1000086000,
        IndirectCommandsLayoutCreateInfoNvx = 1000086001,
        CmdProcessCommandsInfoNvx = 1000086002,
        CmdReserveSpaceForCommandsInfoNvx = 1000086003,
        DeviceGeneratedCommandsLimitsNvx = 1000086004,
        DeviceGeneratedCommandsFeaturesNvx = 1000086005,
        PipelineViewportWScalingStateCreateInfoNv = 1000087000,
        SurfaceCapabilities2Ext = 1000090000,
        DisplayPowerInfoExt = 1000091000,
        DeviceEventInfoExt = 1000091001,
        DisplayEventInfoExt = 1000091002,
        SwapchainCounterCreateInfoExt = 1000091003,
        PresentTimesInfoGoogle = 1000092000,
        PhysicalDeviceMultiviewPerViewAttributesPropertiesNvx = 1000097000,
        PipelineViewportSwizzleStateCreateInfoNv = 1000098000,
        PhysicalDeviceDiscardRectanglePropertiesExt = 1000099000,
        PipelineDiscardRectangleStateCreateInfoExt = 1000099001,
        PhysicalDeviceConservativeRasterizationPropertiesExt = 1000101000,
        PipelineRasterizationConservativeStateCreateInfoExt = 1000101001,
        HdrMetadataExt = 1000105000,
        SharedPresentSurfaceCapabilitiesKhr = 1000111000,
        PhysicalDeviceExternalFenceInfoKhr = 1000112000,
        ExternalFencePropertiesKhr = 1000112001,
        ExportFenceCreateInfoKhr = 1000113000,
        ImportFenceWin32HandleInfoKhr = 1000114000,
        ExportFenceWin32HandleInfoKhr = 1000114001,
        FenceGetWin32HandleInfoKhr = 1000114002,
        ImportFenceFdInfoKhr = 1000115000,
        FenceGetFdInfoKhr = 1000115001,
        PhysicalDevicePointClippingPropertiesKhr = 1000117000,
        RenderPassInputAttachmentAspectCreateInfoKhr = 1000117001,
        ImageViewUsageCreateInfoKhr = 1000117002,
        PipelineTessellationDomainOriginStateCreateInfoKhr = 1000117003,
        PhysicalDeviceSurfaceInfo2Khr = 1000119000,
        SurfaceCapabilities2Khr = 1000119001,
        SurfaceFormat2Khr = 1000119002,
        PhysicalDeviceVariablePointerFeaturesKhr = 1000120000,
        IOSSurfaceCreateInfoMvk = 1000122000,
        MacOSSurfaceCreateInfoMvk = 1000123000,
        MemoryDedicatedRequirementsKhr = 1000127000,
        MemoryDedicatedAllocateInfoKhr = 1000127001,
        PhysicalDeviceSamplerFilterMinmaxPropertiesExt = 1000130000,
        SamplerReductionModeCreateInfoExt = 1000130001,
        SampleLocationsInfoExt = 1000143000,
        RenderPassSampleLocationsBeginInfoExt = 1000143001,
        PipelineSampleLocationsStateCreateInfoExt = 1000143002,
        PhysicalDeviceSampleLocationsPropertiesExt = 1000143003,
        MultisamplePropertiesExt = 1000143004,
        BufferMemoryRequirementsInfo2Khr = 1000146000,
        ImageMemoryRequirementsInfo2Khr = 1000146001,
        ImageSparseMemoryRequirementsInfo2Khr = 1000146002,
        MemoryRequirements2Khr = 1000146003,
        SparseImageMemoryRequirements2Khr = 1000146004,
        ImageFormatListCreateInfoKhr = 1000147000,
        PhysicalDeviceBlendOperationAdvancedFeaturesExt = 1000148000,
        PhysicalDeviceBlendOperationAdvancedPropertiesExt = 1000148001,
        PipelineColorBlendAdvancedStateCreateInfoExt = 1000148002,
        PipelineCoverageToColorStateCreateInfoNv = 1000149000,
        PipelineCoverageModulationStateCreateInfoNv = 1000152000,
        SamplerYcbcrConversionCreateInfoKhr = 1000156000,
        SamplerYcbcrConversionInfoKhr = 1000156001,
        BindImagePlaneMemoryInfoKhr = 1000156002,
        ImagePlaneMemoryRequirementsInfoKhr = 1000156003,
        PhysicalDeviceSamplerYcbcrConversionFeaturesKhr = 1000156004,
        SamplerYcbcrConversionImageFormatPropertiesKhr = 1000156005,
        BindBufferMemoryInfoKhr = 1000157000,
        BindImageMemoryInfoKhr = 1000157001,
        ValidationCacheCreateInfoExt = 1000160000,
        ShaderModuleValidationCacheCreateInfoExt = 1000160001,
        DeviceQueueGlobalPriorityCreateInfoExt = 1000174000,
        ImportMemoryHostPointerInfoExt = 1000178000,
        MemoryHostPointerPropertiesExt = 1000178001,
        PhysicalDeviceExternalMemoryHostPropertiesExt = 1000178002,
    }

    public enum VkSystemAllocationScope : int {
        SystemAllocationScopeCommand = 0,
        SystemAllocationScopeObject = 1,
        SystemAllocationScopeCache = 2,
        SystemAllocationScopeDevice = 3,
        SystemAllocationScopeInstance = 4,
    }

    public enum VkInternalAllocationType : int {
        InternalAllocationTypeExecutable = 0,
    }

    public enum VkSamplerAddressMode : int {
        SamplerAddressModeRepeat = 0,
        SamplerAddressModeMirroredRepeat = 1,
        SamplerAddressModeClampToEdge = 2,
        SamplerAddressModeClampToBorder = 3,
        SamplerAddressModeMirrorClampToEdge = 4,
    }

    public enum VkFilter : int {
        FilterNearest = 0,
        FilterLinear = 1,
        FilterCubicImg = 1000015000,
    }

    public enum VkSamplerMipmapMode : int {
        SamplerMipmapModeNearest = 0,
        SamplerMipmapModeLinear = 1,
    }

    public enum VkVertexInputRate : int {
        Vertex = 0,
        Instance = 1,
    }

    [Flags]
    public enum VkPipelineStageFlags : int {
        TopOfPipe = 0x1,
        DrawIndirect = 0x2,
        VertexInput = 0x4,
        VertexShader = 0x8,
        TessellationControlShader = 0x10,
        TessellationEvaluationShader = 0x20,
        GeometryShader = 0x40,
        FragmentShader = 0x80,
        EarlyFragmentTests = 0x100,
        LateFragmentTests = 0x200,
        ColorAttachmentOutput = 0x400,
        ComputeShader = 0x800,
        Transfer = 0x1000,
        BottomOfPipe = 0x2000,
        Host = 0x4000,
        AllGraphics = 0x8000,
        AllCommands = 0x10000,
        CommandProcessNvx = 0x20000,
    }

    [Flags]
    public enum VkSparseImageFormatFlags : int {
        SparseImageFormatSingleMiptail = 0x1,
        SparseImageFormatAlignedMipSize = 0x2,
        SparseImageFormatNonstandardBlockSize = 0x4,
    }

    [Flags]
    public enum VkSampleCountFlags : int {
        Count1 = 0x1,
        Count2 = 0x2,
        Count4 = 0x4,
        Count8 = 0x8,
        Count16 = 0x10,
        Count32 = 0x20,
        Count64 = 0x40,
    }

    [Flags]
    public enum VkAttachmentDescriptionFlags : int {
        AttachmentDescriptionMayAlias = 0x1,
    }

    [Flags]
    public enum VkDescriptorPoolCreateFlags : int {
        DescriptorPoolCreateFreeDescriptorSet = 0x1,
    }

    [Flags]
    public enum VkDependencyFlags : int {
        DependencyByRegion = 0x1,
        DependencyViewLocalKhx = 0x2,
        DependencyDeviceGroupKhx = 0x4,
    }

    public enum VkObjectType : int {
        ObjectTypeUnknown = 0,
        ObjectTypeInstance = 1,
        ObjectTypePhysicalDevice = 2,
        ObjectTypeDevice = 3,
        ObjectTypeQueue = 4,
        ObjectTypeSemaphore = 5,
        ObjectTypeCommandBuffer = 6,
        ObjectTypeFence = 7,
        ObjectTypeDeviceMemory = 8,
        ObjectTypeBuffer = 9,
        ObjectTypeImage = 10,
        ObjectTypeEvent = 11,
        ObjectTypeQueryPool = 12,
        ObjectTypeBufferView = 13,
        ObjectTypeImageView = 14,
        ObjectTypeShaderModule = 15,
        ObjectTypePipelineCache = 16,
        ObjectTypePipelineLayout = 17,
        ObjectTypeRenderPass = 18,
        ObjectTypePipeline = 19,
        ObjectTypeDescriptorSetLayout = 20,
        ObjectTypeSampler = 21,
        ObjectTypeDescriptorPool = 22,
        ObjectTypeDescriptorSet = 23,
        ObjectTypeFramebuffer = 24,
        ObjectTypeCommandPool = 25,
        ObjectTypeSurfaceKhr = 1000000000,
        ObjectTypeSwapchainKhr = 1000001000,
        ObjectTypeDisplayKhr = 1000002000,
        ObjectTypeDisplayModeKhr = 1000002001,
        ObjectTypeDebugReportCallbackExt = 1000011000,
        ObjectTypeDescriptorUpdateTemplateKhr = 1000085000,
        ObjectTypeObjectTableNvx = 1000086000,
        ObjectTypeIndirectCommandsLayoutNvx = 1000086001,
        ObjectTypeSamplerYcbcrConversionKhr = 1000156000,
        ObjectTypeValidationCacheExt = 1000160000,
    }

    [Flags]
    public enum VkIndirectCommandsLayoutUsageFlagsNvx : int {
        IndirectCommandsLayoutUsageUnorderedSequences = 0x1,
        IndirectCommandsLayoutUsageSparseSequences = 0x2,
        IndirectCommandsLayoutUsageEmptyExecutions = 0x4,
        IndirectCommandsLayoutUsageIndexedSequences = 0x8,
    }

    public enum VkIndirectCommandsTokenTypeNvx : int {
        IndirectCommandsTokenTypePipeline = 0,
        IndirectCommandsTokenTypeDescriptorSet = 1,
        IndirectCommandsTokenTypeIndexBuffer = 2,
        IndirectCommandsTokenTypeVertexBuffer = 3,
        IndirectCommandsTokenTypePushConstant = 4,
        IndirectCommandsTokenTypeDrawIndexed = 5,
        IndirectCommandsTokenTypeDraw = 6,
        IndirectCommandsTokenTypeDispatch = 7,
    }

    [Flags]
    public enum VkObjectEntryUsageFlagsNvx : int {
        ObjectEntryUsageGraphics = 0x1,
        ObjectEntryUsageCompute = 0x2,
    }

    public enum VkObjectEntryTypeNvx : int {
        ObjectEntryTypeDescriptorSet = 0,
        ObjectEntryTypePipeline = 1,
        ObjectEntryTypeIndexBuffer = 2,
        ObjectEntryTypeVertexBuffer = 3,
        ObjectEntryTypePushConstant = 4,
    }

    public enum VkDescriptorUpdateTemplateTypeKhr : int {
        DescriptorUpdateTemplateTypeDescriptorSet = 0,
        DescriptorUpdateTemplateTypePushDescriptors = 1,
    }

    public enum VkViewportCoordinateSwizzleNv : int {
        ViewportCoordinateSwizzlePositiveX = 0,
        ViewportCoordinateSwizzleNegativeX = 1,
        ViewportCoordinateSwizzlePositiveY = 2,
        ViewportCoordinateSwizzleNegativeY = 3,
        ViewportCoordinateSwizzlePositiveZ = 4,
        ViewportCoordinateSwizzleNegativeZ = 5,
        ViewportCoordinateSwizzlePositiveW = 6,
        ViewportCoordinateSwizzleNegativeW = 7,
    }

    public enum VkDiscardRectangleModeExt : int {
        DiscardRectangleModeInclusive = 0,
        DiscardRectangleModeExclusive = 1,
    }

    [Flags]
    public enum VkSubpassDescriptionFlags : int {
        SubpassDescriptionPerViewAttributesNvx = 0x1,
        SubpassDescriptionPerViewPositionXOnlyNvx = 0x2,
    }

    public enum VkPointClippingBehaviorKhr : int {
        PointClippingBehaviorAllClipPlanes = 0,
        PointClippingBehaviorUserClipPlanesOnly = 1,
    }

    public enum VkCoverageModulationModeNv : int {
        CoverageModulationModeNone = 0,
        CoverageModulationModeRgb = 1,
        CoverageModulationModeAlpha = 2,
        CoverageModulationModeRgba = 3,
    }

    public enum VkValidationCacheHeaderVersionExt : int {
        ValidationCacheHeaderVersionOne = 1,
    }

    public enum VkShaderInfoTypeAmd : int {
        ShaderInfoTypeStatistics = 0,
        ShaderInfoTypeBinary = 1,
        ShaderInfoTypeDisassembly = 2,
    }

    public enum VkQueueGlobalPriorityExt : int {
        QueueGlobalPriorityLow = 128,
        QueueGlobalPriorityMedium = 256,
        QueueGlobalPriorityHigh = 512,
        QueueGlobalPriorityRealtime = 1024,
    }

    public enum VkConservativeRasterizationModeExt : int {
        Disabled = 0,
        Overestimate = 1,
        Underestimate = 2,
    }

    public enum VkColorSpaceKhr : int {
        SrgbNonlinear = 0,
        DisplayP3NonlinearExt = 1000104001,
        ExtendedSrgbLinearExt = 1000104002,
        DciP3LinearExt = 1000104003,
        DciP3NonlinearExt = 1000104004,
        Bt709LinearExt = 1000104005,
        Bt709NonlinearExt = 1000104006,
        Bt2020LinearExt = 1000104007,
        Hdr10St2084Ext = 1000104008,
        DolbyvisionExt = 1000104009,
        Hdr10HlgExt = 1000104010,
        AdobergbLinearExt = 1000104011,
        AdobergbNonlinearExt = 1000104012,
        ColorSpacePassThroughExt = 1000104013,
        ColorSpaceExtendedSrgbNonlinearExt = 1000104014,
    }

    [Flags]
    public enum VkCompositeAlphaFlagsKhr : int {
        Opaque = 0x1,
        PreMultiplied = 0x2,
        PostMultiplied = 0x4,
        Inherit = 0x8,
    }

    [Flags]
    public enum VkDisplayPlaneAlphaFlagsKhr : int {
        Opaque = 0x1,
        Global = 0x2,
        PerPixel = 0x4,
        PerPixelPremultiplied = 0x8,
    }

    public enum VkPresentModeKhr : int {
        Immediate = 0,
        Mailbox = 1,
        Fifo = 2,
        FifoRelaxed = 3,
        SharedDemandRefresh = 1000111000,
        SharedContinuousRefresh = 1000111001,
    }

    [Flags]
    public enum VkSurfaceTransformFlagsKhr : int {
        Identity = 0x1,
        Rotate90 = 0x2,
        Rotate180 = 0x4,
        Rotate270 = 0x8,
        HorizontalMirror = 0x10,
        HorizontalMirrorRotate90 = 0x20,
        HorizontalMirrorRotate180 = 0x40,
        HorizontalMirrorRotate270 = 0x80,
        Inherit = 0x100,
    }

    [Flags]
    public enum VkDebugReportFlagsExt : int {
        Information = 0x1,
        Warning = 0x2,
        PerformanceWarning = 0x4,
        Error = 0x8,
        Debug = 0x10,
    }

    public enum VkDebugReportObjectTypeExt : int {
        DebugReportObjectTypeUnknown = 0,
        DebugReportObjectTypeInstance = 1,
        DebugReportObjectTypePhysicalDevice = 2,
        DebugReportObjectTypeDevice = 3,
        DebugReportObjectTypeQueue = 4,
        DebugReportObjectTypeSemaphore = 5,
        DebugReportObjectTypeCommandBuffer = 6,
        DebugReportObjectTypeFence = 7,
        DebugReportObjectTypeDeviceMemory = 8,
        DebugReportObjectTypeBuffer = 9,
        DebugReportObjectTypeImage = 10,
        DebugReportObjectTypeEvent = 11,
        DebugReportObjectTypeQueryPool = 12,
        DebugReportObjectTypeBufferView = 13,
        DebugReportObjectTypeImageView = 14,
        DebugReportObjectTypeShaderModule = 15,
        DebugReportObjectTypePipelineCache = 16,
        DebugReportObjectTypePipelineLayout = 17,
        DebugReportObjectTypeRenderPass = 18,
        DebugReportObjectTypePipeline = 19,
        DebugReportObjectTypeDescriptorSetLayout = 20,
        DebugReportObjectTypeSampler = 21,
        DebugReportObjectTypeDescriptorPool = 22,
        DebugReportObjectTypeDescriptorSet = 23,
        DebugReportObjectTypeFramebuffer = 24,
        DebugReportObjectTypeCommandPool = 25,
        DebugReportObjectTypeSurfaceKhr = 26,
        DebugReportObjectTypeSwapchainKhr = 27,
        DebugReportObjectTypeDebugReportCallbackExt = 28,
        DebugReportObjectTypeDisplayKhr = 29,
        DebugReportObjectTypeDisplayModeKhr = 30,
        DebugReportObjectTypeObjectTableNvx = 31,
        DebugReportObjectTypeIndirectCommandsLayoutNvx = 32,
        DebugReportObjectTypeValidationCacheExt = 33,
        DebugReportObjectTypeDescriptorUpdateTemplateKhr = 1000085000,
        DebugReportObjectTypeSamplerYcbcrConversionKhr = 1000156000,
    }

    public enum VkRasterizationOrderAmd : int {
        RasterizationOrderStrict = 0,
        RasterizationOrderRelaxed = 1,
    }

    [Flags]
    public enum VkExternalMemoryHandleTypeFlagsNv : int {
        ExternalMemoryHandleTypeOpaqueWin32 = 0x1,
        ExternalMemoryHandleTypeOpaqueWin32Kmt = 0x2,
        ExternalMemoryHandleTypeD3D11Image = 0x4,
        ExternalMemoryHandleTypeD3D11ImageKmt = 0x8,
    }

    [Flags]
    public enum VkExternalMemoryFeatureFlagsNv : int {
        ExternalMemoryFeatureDedicatedOnly = 0x1,
        ExternalMemoryFeatureExportable = 0x2,
        ExternalMemoryFeatureImportable = 0x4,
    }

    public enum VkValidationCheckExt : int {
        ValidationCheckAll = 0,
        ValidationCheckShaders = 1,
    }

    [Flags]
    public enum VkExternalMemoryHandleTypeFlagsKhr : int {
        ExternalMemoryHandleTypeOpaqueFd = 0x1,
        ExternalMemoryHandleTypeOpaqueWin32 = 0x2,
        ExternalMemoryHandleTypeOpaqueWin32Kmt = 0x4,
        ExternalMemoryHandleTypeD3D11Texture = 0x8,
        ExternalMemoryHandleTypeD3D11TextureKmt = 0x10,
        ExternalMemoryHandleTypeD3D12Heap = 0x20,
        ExternalMemoryHandleTypeD3D12Resource = 0x40,
        ExternalMemoryHandleTypeDmaBufBitExt = 0x200,
        ExternalMemoryHandleTypeHostAllocationBitExt = 0x80,
        ExternalMemoryHandleTypeHostMappedForeignMemoryBitExt = 0x100,
    }

    [Flags]
    public enum VkExternalMemoryFeatureFlagsKhr : int {
        ExternalMemoryFeatureDedicatedOnly = 0x1,
        ExternalMemoryFeatureExportable = 0x2,
        ExternalMemoryFeatureImportable = 0x4,
    }

    [Flags]
    public enum VkExternalSemaphoreHandleTypeFlagsKhr : int {
        ExternalSemaphoreHandleTypeOpaqueFd = 0x1,
        ExternalSemaphoreHandleTypeOpaqueWin32 = 0x2,
        ExternalSemaphoreHandleTypeOpaqueWin32Kmt = 0x4,
        ExternalSemaphoreHandleTypeD3D12Fence = 0x8,
        ExternalSemaphoreHandleTypeSyncFd = 0x10,
    }

    [Flags]
    public enum VkExternalSemaphoreFeatureFlagsKhr : int {
        ExternalSemaphoreFeatureExportable = 0x1,
        ExternalSemaphoreFeatureImportable = 0x2,
    }

    [Flags]
    public enum VkSemaphoreImportFlagsKhr : int {
        SemaphoreImportTemporary = 0x1,
    }

    [Flags]
    public enum VkExternalFenceHandleTypeFlagsKhr : int {
        ExternalFenceHandleTypeOpaqueFd = 0x1,
        ExternalFenceHandleTypeOpaqueWin32 = 0x2,
        ExternalFenceHandleTypeOpaqueWin32Kmt = 0x4,
        ExternalFenceHandleTypeSyncFd = 0x8,
    }

    [Flags]
    public enum VkExternalFenceFeatureFlagsKhr : int {
        ExternalFenceFeatureExportable = 0x1,
        ExternalFenceFeatureImportable = 0x2,
    }

    [Flags]
    public enum VkFenceImportFlagsKhr : int {
        FenceImportTemporary = 0x1,
    }

    [Flags]
    public enum VkSurfaceCounterFlagsExt : int {
        SurfaceCounterVblankExt = 0x1,
    }

    public enum VkDisplayPowerStateExt : int {
        DisplayPowerStateOff = 0,
        DisplayPowerStateSuspend = 1,
        DisplayPowerStateOn = 2,
    }

    public enum VkDeviceEventTypeExt : int {
        DeviceEventTypeDisplayHotplug = 0,
    }

    public enum VkDisplayEventTypeExt : int {
        DisplayEventTypeFirstPixelOut = 0,
    }

    [Flags]
    public enum VkPeerMemoryFeatureFlagsKhx : int {
        PeerMemoryFeatureCopySrc = 0x1,
        PeerMemoryFeatureCopyDst = 0x2,
        PeerMemoryFeatureGenericSrc = 0x4,
        PeerMemoryFeatureGenericDst = 0x8,
    }

    [Flags]
    public enum VkMemoryAllocateFlagsKhx : int {
        MemoryAllocateDeviceMask = 0x1,
    }

    [Flags]
    public enum VkDeviceGroupPresentModeFlagsKhx : int {
        DeviceGroupPresentModeLocal = 0x1,
        DeviceGroupPresentModeRemote = 0x2,
        DeviceGroupPresentModeSum = 0x4,
        DeviceGroupPresentModeLocalMultiDevice = 0x8,
    }

    [Flags]
    public enum VkSwapchainCreateFlagsKhr : int {
        SwapchainCreateBindSfrBitKhx = 0x1,
    }

    public enum VkTessellationDomainOriginKhr : int {
        TessellationDomainOriginUpperLeft = 0,
        TessellationDomainOriginLowerLeft = 1,
    }

    public enum VkSamplerYcbcrModelConversionKhr : int {
        SamplerYcbcrModelConversionRgbIdentity = 0,
        SamplerYcbcrModelConversionYcbcrIdentity = 1,
        SamplerYcbcrModelConversionYcbcr709 = 2,
        SamplerYcbcrModelConversionYcbcr601 = 3,
        SamplerYcbcrModelConversionYcbcr2020 = 4,
    }

    public enum VkSamplerYcbcrRangeKhr : int {
        SamplerYcbcrRangeItuFull = 0,
        SamplerYcbcrRangeItuNarrow = 1,
    }

    public enum VkChromaLocationKhr : int {
        ChromaLocationCositedEven = 0,
        ChromaLocationMidpoint = 1,
    }

    public enum VkSamplerReductionModeExt : int {
        SamplerReductionModeWeightedAverage = 0,
        SamplerReductionModeMin = 1,
        SamplerReductionModeMax = 2,
    }

    public enum VkBlendOverlapExt : int {
        BlendOverlapUncorrelated = 0,
        BlendOverlapDisjoint = 1,
        BlendOverlapConjoint = 2,
    }
}
